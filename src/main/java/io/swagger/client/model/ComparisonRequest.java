/*
 * librAIry API
 * Learn about [librAIry](http://librairy.github.io/) or follow the account `@librairy_fw` on twitter.     This research project receives funding from the European Commission's Seventh Framework Programme.Activity ICT (FP7-ICT-2013.8.1)  Grant agreement no: 611383 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: librairy.framework@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Reference;
import java.util.ArrayList;
import java.util.List;

/**
 * ComparisonRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-01-19T14:34:01.940Z")
public class ComparisonRequest {
  @SerializedName("description")
  private String description = null;

  @SerializedName("elements")
  private List<Reference> elements = new ArrayList<Reference>();

  @SerializedName("max")
  private Integer max = null;

  @SerializedName("minScore")
  private Double minScore = null;

  @SerializedName("name")
  private String name = null;

  public ComparisonRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ComparisonRequest elements(List<Reference> elements) {
    this.elements = elements;
    return this;
  }

  public ComparisonRequest addElementsItem(Reference elementsItem) {
    this.elements.add(elementsItem);
    return this;
  }

   /**
   * Get elements
   * @return elements
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Reference> getElements() {
    return elements;
  }

  public void setElements(List<Reference> elements) {
    this.elements = elements;
  }

  public ComparisonRequest max(Integer max) {
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMax() {
    return max;
  }

  public void setMax(Integer max) {
    this.max = max;
  }

  public ComparisonRequest minScore(Double minScore) {
    this.minScore = minScore;
    return this;
  }

   /**
   * Get minScore
   * @return minScore
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getMinScore() {
    return minScore;
  }

  public void setMinScore(Double minScore) {
    this.minScore = minScore;
  }

  public ComparisonRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComparisonRequest comparisonRequest = (ComparisonRequest) o;
    return Objects.equals(this.description, comparisonRequest.description) &&
        Objects.equals(this.elements, comparisonRequest.elements) &&
        Objects.equals(this.max, comparisonRequest.max) &&
        Objects.equals(this.minScore, comparisonRequest.minScore) &&
        Objects.equals(this.name, comparisonRequest.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, elements, max, minScore, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComparisonRequest {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    elements: ").append(toIndentedString(elements)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    minScore: ").append(toIndentedString(minScore)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

